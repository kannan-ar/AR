{"remainingRequest":"/home/kannan/Projects/AR-Web-Client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kannan/Projects/AR-Web-Client/src/components/layouts/Layout.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/home/kannan/Projects/AR-Web-Client/src/components/layouts/Layout.vue","mtime":1610855987770},{"path":"/home/kannan/Projects/AR-Web-Client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kannan/Projects/AR-Web-Client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/kannan/Projects/AR-Web-Client/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/kannan/Projects/AR-Web-Client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/kannan/Projects/AR-Web-Client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQgVnVlIGZyb20gInZ1ZSI7CgppbXBvcnQgeyBJbmRleGVkQ29sbGVjdGlvbiwgQ29sdW1uLCBSb3csIENlbGwgfSBmcm9tICIuLi8uLi9tb2RlbHMvTGF5b3V0IjsKaW1wb3J0IENlbGxDb250YWluZXIgZnJvbSAiLi9DZWxsQ29udGFpbmVyLnZ1ZSI7CmltcG9ydCBBZGRNaW51cyBmcm9tICIuL0FkZE1pbnVzLnZ1ZSI7CgppbXBvcnQgewogIGdldEluaXRhbExheW91dCwKICBhZGRMYXlvdXRSb3csCiAgYWRkTGF5b3V0Q29sdW1uLAogIGFkZExheW91dENlbGwsCiAgcmVtb3ZlTGF5b3V0LAogIHVwZGF0ZUNvbXBvbmVudCwKfSBmcm9tICIuLi8uLi9zZXJ2aWNlcy9MYXlvdXQiOwoKZXhwb3J0IGRlZmF1bHQgVnVlLmV4dGVuZCh7CiAgY29tcG9uZW50czogewogICAgQ2VsbENvbnRhaW5lciwKICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbGF5b3V0OiBnZXRJbml0YWxMYXlvdXQoKSwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBvbkNvbXBvbmVudFNlbGVjdCgKICAgICAgY29tcG9uZW50SWQ6IG51bWJlciwKICAgICAgcm93SWQ6IG51bWJlciwKICAgICAgY29sdW1uSWQ6IG51bWJlciwKICAgICAgY2VsbElkOiBudW1iZXIKICAgICkgewogICAgICBjb25zdCBjZWxscyA9IHVwZGF0ZUNvbXBvbmVudCgKICAgICAgICBjb21wb25lbnRJZCwKICAgICAgICByb3dJZCwKICAgICAgICBjb2x1bW5JZCwKICAgICAgICBjZWxsSWQsCiAgICAgICAgdGhpcy5sYXlvdXQuUm93cwogICAgICApOwoKICAgICAgaWYgKGNlbGxzICE9PSBudWxsKSB7CiAgICAgICAgdGhpcy4kc2V0KHRoaXMubGF5b3V0LlJvd3Nbcm93SWRdLkNvbHVtbnNbY29sdW1uSWRdLCAiQ2VsbHMiLCBjZWxscyk7CiAgICAgICAgY29uc29sZS5sb2codGhpcy5sYXlvdXQuUm93c1tyb3dJZF0uQ29sdW1uc1tjb2x1bW5JZF0uQ2VsbHMpOwogICAgICB9CiAgICB9LAoKICAgIGFkZFJvdyhyb3dzOiBSb3dbXSk6IHZvaWQgewogICAgICBhZGRMYXlvdXRSb3cocm93cyk7CiAgICB9LAoKICAgIGFkZENvbHVtbihjb2x1bW5zOiBDb2x1bW5bXSkgewogICAgICBhZGRMYXlvdXRDb2x1bW4oY29sdW1ucyk7CiAgICB9LAoKICAgIGFkZENlbGwoY2VsbHM6IENlbGxbXSkgewogICAgICBhZGRMYXlvdXRDZWxsKGNlbGxzKTsKICAgIH0sCgogICAgcmVtb3ZlPFQ+KGFycjogSW5kZXhlZENvbGxlY3Rpb25bXSwgaWQ6IG51bWJlcik6IHZvaWQgewogICAgICByZW1vdmVMYXlvdXQoYXJyLCBpZCk7CiAgICB9LAogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBpc0VkaXRNb2RlKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuaXNFZGl0TW9kZTsKICAgIH0sCiAgfSwKfSk7Cg=="},{"version":3,"sources":["Layout.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgIA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Layout.vue","sourceRoot":"src/components/layouts","sourcesContent":["<template>\n  <v-container\n    :fluid=\"!isEditMode\"\n    :class=\"{ 'container-in-edit': isEditMode, 'rounded-lg': isEditMode }\"\n  >\n    <v-row v-for=\"(row, i) in layout.Rows\" :key=\"i\">\n      <v-col cols=\"12\" v-if=\"isEditMode\">\n        <v-card flat>\n          <v-system-bar lights-out>\n            <v-spacer></v-spacer>\n            <v-menu bottom left>\n              <template v-slot:activator=\"{ on, attrs }\">\n                <v-btn\n                  color=\"blue-grey lighten-3\"\n                  flat\n                  x-small\n                  v-bind=\"attrs\"\n                  v-on=\"on\"\n                >\n                  <v-icon small>mdi-table-edit</v-icon>\n                </v-btn>\n              </template>\n              <v-list>\n                <v-list-item @click=\"addColumn(row.Columns)\">\n                  <v-list-item-title>Add Column</v-list-item-title>\n                </v-list-item>\n                <v-list-item @click=\"remove(layout.Rows, row.Id)\">\n                  <v-list-item-title>Delete Row</v-list-item-title>\n                </v-list-item>\n              </v-list>\n            </v-menu>\n          </v-system-bar>\n        </v-card>\n      </v-col>\n      <v-col v-for=\"(column, i) in row.Columns\" :key=\"i\">\n        <div\n          class=\"d-flex flex-column\"\n          v-if=\"isEditMode\"\n          :class=\"{ 'column-in-edit': isEditMode }\"\n        >\n          <v-card flat>\n            <v-system-bar color=\"blue-grey lighten-4\">\n              <v-spacer></v-spacer>\n              <v-menu bottom left>\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-btn icon v-bind=\"attrs\" v-on=\"on\" right>\n                    <v-icon small>mdi-table-large</v-icon>\n                  </v-btn>\n                </template>\n                <v-list>\n                  <v-list-item @click=\"addCell(column.Cells)\">\n                    <v-list-item-title>Add Cell</v-list-item-title>\n                  </v-list-item>\n                  <v-list-item @click=\"remove(row.Columns, column.Id)\">\n                    <v-list-item-title>Delete Column</v-list-item-title>\n                  </v-list-item>\n                </v-list>\n              </v-menu>\n            </v-system-bar>\n          </v-card>\n        </div>\n        <div\n          class=\"d-flex flex-column\"\n          v-for=\"(cell, i) in column.Cells\"\n          :key=\"i\"\n          :class=\"{ 'cell-in-edit': isEditMode }\"\n        >\n          <div :class=\"{ 'component-in-edit': isEditMode }\">\n            <v-card\n              flat\n              v-if=\"isEditMode\"\n              :class=\"{ 'component-header-in-edit': isEditMode }\"\n            >\n              <v-system-bar>\n                <v-spacer></v-spacer>\n                <v-menu bottom left>\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn icon v-bind=\"attrs\" v-on=\"on\">\n                      <v-icon small>mdi-apps</v-icon>\n                    </v-btn>\n                  </template>\n                  <v-list>\n                    <v-list-item @click=\"remove(column.Cells, cell.Id)\">\n                      <v-list-item-title>Delete Cell</v-list-item-title>\n                    </v-list-item>\n                  </v-list>\n                </v-menu>\n              </v-system-bar>\n            </v-card>\n            <cell-container\n            :cell=\"cell\"\n            :rowId=\"row.Id\"\n            :columnId=\"column.Id\"\n            :cellId=\"cell.Id\"\n            @onComponentSelect=\"onComponentSelect\"\n            :class=\"{'component-body-in-edit': isEditMode}\"\n          />\n          </div>\n        </div>\n      </v-col>\n      <v-col cols=\"12\" v-if=\"isEditMode\">\n        <v-divider></v-divider>\n      </v-col>\n    </v-row>\n    <v-row v-if=\"isEditMode\">\n      <v-col>\n        <v-card flat>\n          <v-toolbar flat>\n            <v-btn\n              color=\"blue\"\n              fab\n              dark\n              small\n              absolute\n              bottom\n              left\n              @click=\"addRow(layout.Rows)\"\n            >\n              <v-icon>mdi-plus</v-icon>\n            </v-btn>\n          </v-toolbar>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script lang=\"ts\">\nimport Vue from \"vue\";\n\nimport { IndexedCollection, Column, Row, Cell } from \"../../models/Layout\";\nimport CellContainer from \"./CellContainer.vue\";\nimport AddMinus from \"./AddMinus.vue\";\n\nimport {\n  getInitalLayout,\n  addLayoutRow,\n  addLayoutColumn,\n  addLayoutCell,\n  removeLayout,\n  updateComponent,\n} from \"../../services/Layout\";\n\nexport default Vue.extend({\n  components: {\n    CellContainer,\n  },\n\n  data() {\n    return {\n      layout: getInitalLayout(),\n    };\n  },\n  methods: {\n    onComponentSelect(\n      componentId: number,\n      rowId: number,\n      columnId: number,\n      cellId: number\n    ) {\n      const cells = updateComponent(\n        componentId,\n        rowId,\n        columnId,\n        cellId,\n        this.layout.Rows\n      );\n\n      if (cells !== null) {\n        this.$set(this.layout.Rows[rowId].Columns[columnId], \"Cells\", cells);\n        console.log(this.layout.Rows[rowId].Columns[columnId].Cells);\n      }\n    },\n\n    addRow(rows: Row[]): void {\n      addLayoutRow(rows);\n    },\n\n    addColumn(columns: Column[]) {\n      addLayoutColumn(columns);\n    },\n\n    addCell(cells: Cell[]) {\n      addLayoutCell(cells);\n    },\n\n    remove<T>(arr: IndexedCollection[], id: number): void {\n      removeLayout(arr, id);\n    },\n  },\n\n  computed: {\n    isEditMode() {\n      return this.$store.state.isEditMode;\n    },\n  },\n});\n</script>\n\n<style scoped>\n.container-in-edit {\n  border: 1px solid rgb(204, 204, 204);\n  margin-top: 10px;\n}\n\n.column-in-edit {\n  border: 1px solid rgb(204, 204, 204);\n}\n\n.cell-in-edit {\n  margin-top: 10px;\n}\n\n.component-in-edit {\n  border: 1px solid rgb(204, 204, 204);\n}\n\n.component-header-in-edit {\n  margin-bottom: 10px;\n}\n\n.component-body-in-edit {\n  margin: 10px;\n}\n</style>"]}]}